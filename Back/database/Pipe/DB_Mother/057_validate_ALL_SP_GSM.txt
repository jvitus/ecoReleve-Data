

CREATE PROCEDURE [dbo].[sp_auto_validate_ALL_GSM]
	@user int,
	@freq int,
	@nb_insert int OUTPUT,
	@exist int output, 
	@error int output
	
	
AS
BEGIN
	

	SET NOCOUNT ON;
	DECLARE @data_to_insert table ( 
		data_id int,FK_Sensor int, date_ datetime, lat decimal(9,5), lon decimal(9,5)
		,ele int ,hdop int , 
		speed int,course int, type_ varchar(3),
		 FK_ind int,creator int,name varchar(100)
		 );

	DECLARE @data_duplicate table ( 
		data_id int,fk_sta_id int
		);

	DECLARE @output TABLE (ind_loc_id int,data_id varchar(20));
	DECLARE @NbINserted int ; 

WITH data AS (
		SELECT *
			, ROW_NUMBER() OVER (PARTITION BY FK_Individual,FK_Sensor,CONVERT(DATE, date), DATEPART(hour, date),  DATEPART(minute, date)/@freq, type ORDER BY date) as r
		FROM VGSMData_With_EquipIndiv where checked = 0 and FK_Individual IS NOT NULL
	)


-- insert data creating new Location
INSERT INTO [dbo].[Individual_Location]
           ([LAT]
           ,[LON]
           ,[Date]
           ,[Precision]
           ,[FK_Sensor]
           ,[FK_Individual]
           ,[ELE]
           ,[creationDate]
           ,[creator]
           ,[type_]
		   ,OriginalData_ID
		   ,FK_Region)
OUTPUT inserted.ID,inserted.OriginalData_ID INTO @output
select 
lat,
lon,
date,
CASE 
WHEN hdop is null then 26
ELSE hdop
 END
,FK_Sensor
,FK_Individual
,ele
,GETDATE()
,@user
,[type]
,'Tgsm'+CONVERT(VARCHAR,PK_id)
,NULL
from data i
where r = 1
AND not EXISTS (select * FROM Individual_Location s 
				WHERE i.lat=s.LAT and i.lon = s.LON and i.date = s.DATE and s.FK_Individual = i.FK_Individual)
SET @NbINserted=@@ROWCOUNT;



WITH data AS (
		SELECT *
			, ROW_NUMBER() OVER (PARTITION BY FK_Individual,FK_Sensor,CONVERT(DATE, date), DATEPART(hour, date),  DATEPART(minute, date)/@freq, type ORDER BY date) as r
		FROM VGSMData_With_EquipIndiv where checked = 0 and FK_Individual IS NOT NULL
	)

SELECT @exist = (select COUNT(*) FROM data where r=1)- @NbINserted

update ecoReleve_Sensor.dbo.T_argosgps set imported = 1 where PK_id in (select CONVERT(int,replace(data_id,'Tgsm','')) from @output)
update VGSMData_With_EquipIndiv set checked = 1 where checked = 0 and [FK_Individual] IS NOT NULL ;


SET @nb_insert = @NbINserted
SET @error=@@ERROR



RETURN
END



GO



INSERT INTO [dbo].[TVersion] (TVer_FileName,TVer_Date,TVer_DbName) VALUES ('57_validate_ALL_SP_GSM',GETDATE(),(SELECT db_name()))


GO
